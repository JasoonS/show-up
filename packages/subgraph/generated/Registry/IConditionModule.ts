// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class IConditionModule extends ethereum.SmartContract {
  static bind(address: Address): IConditionModule {
    return new IConditionModule("IConditionModule", address);
  }

  checkin(
    recordId: BigInt,
    attendees: Array<Address>,
    data: Bytes
  ): Array<Address> {
    let result = super.call(
      "checkin",
      "checkin(uint256,address[],bytes):(address[])",
      [
        ethereum.Value.fromUnsignedBigInt(recordId),
        ethereum.Value.fromAddressArray(attendees),
        ethereum.Value.fromBytes(data)
      ]
    );

    return result[0].toAddressArray();
  }

  try_checkin(
    recordId: BigInt,
    attendees: Array<Address>,
    data: Bytes
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "checkin",
      "checkin(uint256,address[],bytes):(address[])",
      [
        ethereum.Value.fromUnsignedBigInt(recordId),
        ethereum.Value.fromAddressArray(attendees),
        ethereum.Value.fromBytes(data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class CancelCall extends ethereum.Call {
  get inputs(): CancelCall__Inputs {
    return new CancelCall__Inputs(this);
  }

  get outputs(): CancelCall__Outputs {
    return new CancelCall__Outputs(this);
  }
}

export class CancelCall__Inputs {
  _call: CancelCall;

  constructor(call: CancelCall) {
    this._call = call;
  }

  get recordId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class CancelCall__Outputs {
  _call: CancelCall;

  constructor(call: CancelCall) {
    this._call = call;
  }
}

export class CheckinCall extends ethereum.Call {
  get inputs(): CheckinCall__Inputs {
    return new CheckinCall__Inputs(this);
  }

  get outputs(): CheckinCall__Outputs {
    return new CheckinCall__Outputs(this);
  }
}

export class CheckinCall__Inputs {
  _call: CheckinCall;

  constructor(call: CheckinCall) {
    this._call = call;
  }

  get recordId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get attendees(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class CheckinCall__Outputs {
  _call: CheckinCall;

  constructor(call: CheckinCall) {
    this._call = call;
  }

  get value0(): Array<Address> {
    return this._call.outputValues[0].value.toAddressArray();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get recordId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RegisterCall extends ethereum.Call {
  get inputs(): RegisterCall__Inputs {
    return new RegisterCall__Inputs(this);
  }

  get outputs(): RegisterCall__Outputs {
    return new RegisterCall__Outputs(this);
  }
}

export class RegisterCall__Inputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }

  get recordId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get participant(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get sender(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class RegisterCall__Outputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }
}

export class SettleCall extends ethereum.Call {
  get inputs(): SettleCall__Inputs {
    return new SettleCall__Inputs(this);
  }

  get outputs(): SettleCall__Outputs {
    return new SettleCall__Outputs(this);
  }
}

export class SettleCall__Inputs {
  _call: SettleCall;

  constructor(call: SettleCall) {
    this._call = call;
  }

  get recordId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SettleCall__Outputs {
  _call: SettleCall;

  constructor(call: SettleCall) {
    this._call = call;
  }
}
