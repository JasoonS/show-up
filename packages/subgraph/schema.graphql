enum Status {
  Active
  Cancelled
  Settled
}

type ConditionModule @entity {
  id: Bytes! # address
  createdAt: BigInt!
  createdBy: Bytes! # address
  whitelisted: Boolean! # true
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type Record @entity {
  id: Bytes!
  recordId: BigInt!
  createdAt: BigInt!
  createdBy: Bytes!
  updatedAt: BigInt
  message: String

  conditionModule: Bytes! # address
  status: Status! # Active
  contentUri: String!
  metadata: String
  participants: [Participants!]! @derivedFrom(field: "record")

  blockNumber: BigInt!
  transactionHash: Bytes!
}

type User @entity {
  id: Bytes! # address
  participations: [Participants!] @derivedFrom(field: "user")
}

type Participants @entity {
  id: String! # Set to `record.id.concat(user.id)`
  createdAt: BigInt!
  createdBy: Bytes!
  address: Bytes! # address
  checkedIn: Boolean! # false
  user: User!
  record: Record!
}
