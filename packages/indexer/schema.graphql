type ConditionModule {
  id: ID! # Address
  chainId: Int!
  createdAt: BigInt!
  createdBy: Bytes! # address
  blockNumber: BigInt!
  transactionHash: Bytes!

  name: String!
  whitelisted: Boolean! # true
}

type Record {
  id: ID! # Chain + Record ID
  chainId: Int!
  createdAt: BigInt!
  createdBy: Bytes!
  blockNumber: BigInt!
  transactionHash: Bytes!

  endDate: BigInt!
  limit: BigInt!
  owner: User!
  status: Int!
  message: String

  contentUri: String!
  metadata: Event

  conditionModule: ConditionModule!
  depositFee: BigInt!
  tokenAddress: Bytes
  recipient: Bytes

  totalRegistrations: BigInt!
  totalAttendees: BigInt!
  totalFunded: BigInt!
  registrations: [Registration!]! @derivedFrom(field: "record")
}

type Registration {
  id: ID! # Chain + Record + User address
  createdAt: BigInt!
  createdBy: Bytes!
  blockNumber: BigInt!
  transactionHash: Bytes!

  checkedIn: Boolean! # false
  record: Record!
  user: User!
}

type User {
  id: ID! # address
  name: String!
  avatar: String

  registrations: [Registration!]! @derivedFrom(field: "user")
}

type Event {
  id: ID! # Content Hash
  appId: String
  title: String!
  description: String
  start: String!
  end: String!
  timezone: String!
  location: String!
  website: String
  imageUrl: String
  visibility: Int!
}
